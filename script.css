body {
    font-family: sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #f0f0f0;
    margin: 0;
    padding: 20px;
}

h1 {
    color: #333;
}

.game-container {
    display: grid;
    /* Vamos usar 4 colunas */
    grid-template-columns: repeat(4, 100px); 
    grid-gap: 10px;
    padding: 20px;
    border: 2px solid #ccc;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.card {
    width: 100px;
    height: 100px;
    background-color: #4CAF50; /* Cor da capa da carta (fundo) */
    border-radius: 6px;
    perspective: 1000px; /* Para o efeito 3D do flip */
    cursor: pointer;
    position: relative;
    transition: transform 0.6s;
    transform-style: preserve-3d;
}

/* Estado da carta virada (mostrando o conteúdo) */
.card.flip {
    transform: rotateY(180deg);
}

/* O conteúdo da carta (frente e verso) */
.card-face, .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden; /* Esconde a parte de trás quando ela não está virada para nós */
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 30px;
    border-radius: 6px;
}

/* A parte de trás (o que aparece quando está virada) */
.card-back {
    background-color: #eee;
    color: #333;
    transform: rotateY(180deg);
}

/* Estado de par encontrado */
.card.match {
    /* Mantém virada e muda o visual para indicar que o par foi feito */
    cursor: default;
    opacity: 0.6;
}

.status-bar {
    margin-top: 20px;
    display: flex;
    gap: 20px;
    align-items: center;
}

